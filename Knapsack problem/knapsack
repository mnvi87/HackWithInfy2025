import java.util.*;

// Item class to hold value and weight
class Item {
    int value, weight;
    Item(int value, int weight) {
        this.value = value;
        this.weight = weight;
    }
}

public class FractionalKnapsack {

    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Input: number of items and knapsack capacity
        int n = sc.nextInt();
        int capacity = sc.nextInt();

        // Array to store all items
        Item[] items = new Item[n];
        for (int i = 0; i < n; i++) {
            int value = sc.nextInt();
            int weight = sc.nextInt();
            items[i] = new Item(value, weight);
        }

        // Sort items by value-to-weight ratio in descending order
        Arrays.sort(items, (a, b) -> Double.compare((double)b.value / b.weight, (double)a.value / a.weight));

        double totalValue = 0.0;

        for (Item item : items) {
            if (capacity >= item.weight) {
                // If item can be taken fully
                capacity -= item.weight;
                totalValue += item.value;
            } else {
                // Take fraction of the remaining item
                totalValue += item.value * ((double)capacity / item.weight);
                break; // Knapsack is full
            }
        }

        // Print the maximum value with 2 decimal places
        System.out.printf("%.2f\n", totalValue);
    }
}
